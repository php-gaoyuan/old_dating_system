/*tree.yk.js*/
(function ($) {
    $.comment_tree = function (setting) {
        // debugger;
        var options = {
            selector: null,
            btnTranslate: x18n.transate,
            btnReply: x18n.btnReply,
            btnDelete: x18n.btnDelete,
            btnReport: x18n.btnReport,
            dataUrl: null,
            sqlId: null,
            visitor: null,
            createUrl: null,
            deleteUrl: null,
            msgNull: null,
            bindTrans: $.noop,
            runBindTrans: $.noop,
            bindReport: $.noop,
            checkBuckleGold: function () { return true },
            hasDel: true
        };
        $.extend(options, setting);
        //        var html = ['<div class="reply_input_lq reply" id="js_replyinput">',
        //                   '<div class="left_arrow1_lq"></div>',
        //                   '<textarea class="mood_text1_lq" style="height: 40px;"></textarea>',
        //                   '<div class="input_infobox_lq"><a class="faces_icon1_lq"></a><span class="char_count1_lq">240</span>',
        //                   '</div>',
        //                   '<div class="mood_op1_lq">', x18n.transate, ':<select id="trans_select_yk">',
        //                       '<option value="">', x18n.noTrans, '</option>',
        //                       '<option value="en" selected="selected">English</option>',
        //                       '<option value="cn">中文(简体)</option>',
        //                       '<option value="tr">中文(繁体)</option>',
        //                       '<option value="ko">한국어</option>',
        //                       '<option value="rs">Pусский</option>',
        //                       '<option value="gm">Deutsch</option>',
        //                       '<option value="sp">Español</option>',
        //                       '<option value="jp">日本語</option>',
        //                   '</select><a class="gray_btn1_lq">' + x18n.submitText + '</a></div>',
        //                   '</div>',
        //                   '<div id="CommentTree">',
        //                       '<div class="reply_input1_lq comment_tree1_lq">',
        //                       '</div>',
        //                   '</div>'].join('');
        var html = ['<div class="reply_input_lq reply js_reply_box" id="js_replyinput">',
                               '<div class="left_arrow1_lq"></div>',
                               '<textarea class="mood_text1_lq" style="height: 130px; padding:10px; "></textarea>',
                               '<div class="mood_op1_lq">',
                                    '<div class="lang-select js_select_top mr10">',
                                    '<label style="position: relative;"><span data-lang="no" id="moodLang">English</span><i style="position:absolute;right: 0;top:10px;right: 10px;"></i></label>',
                                    '<ul class="lang-uls lr-hide" >',
                                     '<li langs-lang="">', x18n.noTrans, '</li>',
                                      '<li langs-lang="en">English</li>',
                                       '<li langs-lang="cn">中文(简体)</li>',
                                        '<li langs-lang="tr">中文(繁体)</li>',
                                        '<li langs-lang="ko">한국어</li>',
                                        '<li langs-lang="rs">русский</li>',
                                        '<li langs-lang="gm">Deutsch</li>',
                                        '<li langs-lang="sp">Español</li>',
                                        '<li langs-lang="jp">日本語</li>',
                                    '</ul>',
                                  '<input type="hidden" id="replyLangs" value="en"/>',
                                '</div>',
        //                        '<div class="lang-select js_select_top mr10">',
        //                                '<select id="trans_select_yk">',
        //                                   '<option value="">', x18n.noTrans, '</option>',
        //                                   '<option value="en" selected="selected">English</option>',
        //                                   '<option value="cn">中文(简体)</option>',
        //                                   '<option value="tr">中文(繁体)</option>',
        //                                   '<option value="ko">한국어</option>',
        //                                   '<option value="rs">Pусский</option>',
        //                                   '<option value="gm">Deutsch</option>',
        //                                   '<option value="sp">Español</option>',
        //                                   '<option value="jp">日本語</option>',
        //                               '</select>',

        //                        '</div>', 
            x18n.transate,
                            '<div class="input_infobox_lq">',
                                  '<a class="faces_icon1_lq"><i class="mood-face" style="margin-bottom: 2px;"></i><span class="ml5" style="color:#333333;margin-bottom:1px; ">', x18n.emotion, '</span></a>',

                                 '</div>',
                               '<a class="replySubmitBtn gray_btn1_lq">' + x18n.submitText + '</a></div>',
                            '</div>',
                              '<div id="CommentTree" class="mt10">',
                                   '<div class="reply_input1_lq comment_tree1_lq">',
                                   '</div>',
                               '</div>'].join('');
        $('#' + options.selector).append(html);
        var deleteHtml = options.hasDel ? '<a class="delete_op1_lq">' + options.btnDelete + '</a>' : '';
        if (options.delType == "moodDetail") {//如果是心情就和其他不一样
            deleteHtml = '<span class="close-icon delete_op1_lq" style="position:absolute;right:0;top:0;"></span>';
        }
        var tt;
        options.delType == "moodDetail" ?
        tt = $('#CommentTree .comment_tree1_lq').commentTree({//心情详情页
            html: { templateParent: '<dl datalq1="Id:${id},userId:${userId}" class="comment_box_lf"><dt><img src="${userIdImg}" alt="${userId}"/></dt><dd><p style="position:relative;">${deleteHtml}<a class="name_box1_lq">${userId}：&nbsp;</a><span class="comment_content">${content}</span></p><p><span class="send_time" dateutc="${date}">${UTCDate}</span><a class="comment_trans" id="trans_${id}">${comment_transText}</a><a class="recomment_op1_lq">${recommentText}</a><a class="report_comment defHide" receiver="${userId}">${report_commentText}</a></p></dd>',
                templateChild: '<dd><dl datalq1="Id:${id},userId:${userId}" class="child_box1_lq"><dt><img src="${userIdImg}" alt="${userId}"/></dt><dd><p style="position:relative;">${deleteHtml}<a class="name_box1_lq">${userId}&nbsp;${recommentText}&nbsp;${parentUserId}：</a><span class="comment_content">${content}</span></p><p><span class="send_time" dateutc="${date}">${UTCDate}</span><a class="comment_trans" id="trans_${id}">${comment_transText}</a><a class="recomment_op1_lq">${recommentText}</a><a class="report_comment" receiver="${userId}">${report_commentText}</a></p></dd></dl></dd>',
                templateClose: '<dd class="hidden1_lq reply_box1_lq"></dd></dl>',
                staticData: { translateText: options.btnTranslate,
                    recommentText: options.btnReply,
                    report_commentText: options.btnReport,
                    comment_transText: options.btnTranslate,
                    deleteHtml: deleteHtml
                }
            }
        }).refresh() :
         tt = $('#CommentTree .comment_tree1_lq').commentTree({//日志相册
             html: { templateParent: '<dl datalq1="Id:${id},userId:${userId}" class="comment_box_lf"><dt><img src="${userIdImg}" alt="${userId}"/></dt><dd><p><a class="name_box1_lq">${userId}：&nbsp;</a><span class="comment_content">${content}</span></p><p><span class="send_time" dateutc="${date}">${UTCDate}</span><a class="report_comment" receiver="${userId}">${report_commentText}</a><a class="comment_trans" id="trans_${id}">${comment_transText}</a><a class="recomment_op1_lq">${recommentText}</a>${deleteHtml}</p></dd>',
                 templateChild: '<dd><dl datalq1="Id:${id},userId:${userId}" class="child_box1_lq"><dt><img src="${userIdImg}" alt="${userId}"/></dt><dd><p><a class="name_box1_lq">${userId}&nbsp;${recommentText}&nbsp;${parentUserId}：</a><span class="comment_content">${content}</span></p><p><span class="send_time" dateutc="${date}">${UTCDate}</span><a class="report_comment" receiver="${userId}">${report_commentText}</a><a class="comment_trans" id="trans_${id}">${comment_transText}</a><a class="recomment_op1_lq">${recommentText}</a>${deleteHtml}</p></dd></dl></dd>',
                 templateClose: '<dd class="hidden1_lq reply_box1_lq"></dd></dl>',
                 staticData: { translateText: options.btnTranslate,
                     recommentText: options.btnReply,
                     report_commentText: options.btnReport,
                     comment_transText: options.btnTranslate,
                     deleteHtml: deleteHtml
                 }
             }
         }).refresh();
        


        //填充数据
        $.get(options.dataUrl, { id: options.sqlId }, function (res) {
            //debugger;
            var jsonData = eval('(' + res + ')');
            var ids = [];
            var authors = [];
            for (var n = 0; n < jsonData.length; n++) {
                jsonData[n].UTCDate = toolLq.utcStrParse(jsonData[n].sendTime);
                ids.push("'" + jsonData[n].id + "'");
                authors.push("'" + jsonData[n].userId + "'");
            }
            ids = ids.join(',');
            authors = authors.join(',');
            tt.refresh(jsonData, true);

            //绑定翻译
            options.bindTrans(ids, authors);
            //绑定举报
            Global_report('#CommentTree .report_comment');
            //转化时间    
            global_date_change("#mood_tree_lf");
        });


        //交互方法
        $('#CommentTree').reply({
            tree: {
                createNode: addComment,
                delNode: delComment,
                template: {
                    inner: '<dd><dl datalq1="Id:${id},userId:${userId}" class="child_box1_lq"><dt><img src="${userIdImg}" alt="${userId}"/></dt><dd><p style="position:relative;">${deleteHtml} <a class="name_box1_lq">${userId}&nbsp;${recommentText}&nbsp;${parentUserId}：</a><span class="comment_content">${content}</span></p><p><span class="send_time" dateutc="${date}">${UTCDate}</span><a class="comment_trans" id="trans_id">${comment_transText}</a><a class="recomment_op1_lq">${recommentText}</a><a class="report_comment" receiver="${userId}">${report_commentText}</a></p></dd></dl></dd>',
                    data: { translateText: options.btnTranslate, recommentText: options.btnReply, report_commentText: options.btnReport, comment_transText: options.btnTranslate, deleteHtml: deleteHtml }
                }
            },
            input: {
                onFlow: function (count) {
                    failure_message(x18n.textOverFlow + count);
                    return false;
                }
            },
            memberId: options.visitor,
            reverse: true
        });

        //添加评论
        function addComment(content, pid, jqTxta, reply) {
            if (!content) {
                failure_message(x18n.commentIsNull);
                removeDom();
                return;
            }
            var transType = jqTxta.siblings('.mood_op1_lq').find('select').length ? jqTxta.siblings('.mood_op1_lq').find('select').has('option[value="en"]').val() : $("#replyLangs").val();

            function realAddComment() {
                $.post(options.createUrl, { pid: pid, ownerId: options.sqlId, content: content, transType: transType }, function (res) {
                    //alert(transType)
                    if (res.result == '1') {
                        res.UTCDate = toolLq.utcStrParse(res.date).str;
                        reply.submitReply(content, jqTxta, res.id, pid, res);
                        success_message(res.tip);
                        jqTxta.data('jqDl').attr('id', res.id);
                        //每个新增评论的翻译按钮，单独绑定一个translate
                        options.runBindTrans(res.id);
                        //举报
                        Global_report(jqTxta.data('jqDl').find('.report_comment'));
                    }
                    else if (res.result == '2') {
                        goldShortage();
                        reply.removeDom([0], jqTxta.data('jqDl'));
                        jqTxta.val('');
                    }
                    else {
                        failure_message(res.tip);
                        reply.removeDom([0], jqTxta.data('jqDl'));
                        jqTxta.val('');
                    }
                });
            }
            function removeDom() {
                reply.removeDom([0], jqTxta.data('jqDl'));
            }
            //执行hook
            if (!options.checkBuckleGold(pid, options.sqlId, content, transType, realAddComment, removeDom)) return;
            realAddComment();
        }
        //边框颜色
        $(".js_reply_box").click(function (e) {
            $(this).css({ "border": "1px solid #fac572" }); //选中状态的input颜色是橘黄色
            e.stopPropagation();
            $('body').click(function () {
                $(".js_reply_box").css({ "border": "1px solid #c5cddc" });
            });
        });
        //语言下拉框
        $(".js_select_top label").bind("click", function (e) {
            $(this).closest(".js_select_top").find("ul,.triggle-top").toggle();
            e.stopPropagation();
            $('body').click(function () {
                $('.js_select_top ul').hide();
            });
        });
        $(".js_select_top ul li").bind('click', function (e) {
            var selected = $(this).text();
            var value = $(this).attr("langs-lang");
            $(this).closest(".js_select_top").find("span").text(selected).attr("data-lang", value);
            $("#replyLangs").val($(this).attr("langs-lang")); //私信选择翻译语言
            //  if ($("#LetterLang").val() != "no") {//私信是否翻译
            //   $("#IsTrans").val("yes");
            //   }
            //  else if ($("#LetterLang").val() == "no") {
            //    $("#IsTrans").val("no");
            //   }
            //debugger;
            $(this).closest(".js_select_top").find("ul").hide();
            //$(".js_select_top ul").hide();
            // e.preventDefault(); 
        });

        //删除评论
        function delComment(ids, jqDl, reply) {
            if (ids.length < 1) failure_message(options.msgNull);
            var id = ids.length == 1 ? ids[0] : "'" + ids.join("','") + "'";
            options.delType == "moodDetail"?
             $.post(options.deleteUrl, { idList: id }, function (res) {//心情参数和其他不一样
                 if (res.result) {
                    reply.delReply(ids, jqDl)
                }
                else {
                    failure_message(res.message);
                }
            }):
            $.post(options.deleteUrl, { id: id, ownerId: options.sqlId }, function (res) {
                if (res.success) {
                    reply.delReply(ids, jqDl)
                }
                else {
                    failure_message(res.message);
                }
            });
          
        }
        //评论框
        $('#js_replyinput').replyInput();
        $('#js_replyinput .gray_btn1_lq').bind('click', submitReply);
        function submitReply() {
            var reply = $('#CommentTree').reply('getReply');
            if ($(".mood-treeDetail").length > 0) {//mood
                reply.submitReply(this, null, {
                    inner: '<dd><dl datalq1="Id:${id},userId:${userId}" class="child_box1_lq"><dt><img src="${userIdImg}" alt="${userId}"/></dt><dd><p><a class="name_box1_lq">${userId}&nbsp;${recommentText}&nbsp;${parentUserId}：</a><span class="comment_content">${content}</span></p><p><span class="send_time" dateutc="${date}">${UTCDate}</span><a class="report_comment" receiver="${userId}">${report_commentText}</a><a class="comment_trans" id="trans_id">${comment_transText}</a><a class="recomment_op1_lq">${recommentText}</a>${deleteHtml}</p></dd></dl></dd>',
                    outer: '<dl class="comment_box_lf" datalq1="Id:${id},userId:${userId}"><dt><img src="${userIdImg}" width="32" height="32" alt="${userId}"/></dt><dd><p style="position:relative;">${deleteHtml}<a class="name_box1_lq">${userId}&nbsp;：</a><span class="comment_content">${content}</span></p><p><span class="send_time" dateutc="${date}">${UTCDate}</span><a class="comment_trans" id="trans_id">${comment_transText}</a><a class="recomment_op1_lq">${recommentText}</a><a class="report_comment" receiver="${userId}">${report_commentText}</a>${deleteHtml}</p></dd><dd class="hidden1_lq reply_box1_lq"></dd></dl>'
                });
            } else {
                reply.submitReply(this, null, {//daily and photo
                    inner: '<dd><dl datalq1="Id:${id},userId:${userId}" class="child_box1_lq"><dt><img src="${userIdImg}" alt="${userId}"/></dt><dd><p><a class="name_box1_lq">${userId}&nbsp;${recommentText}&nbsp;${parentUserId}：</a><span class="comment_content">${content}</span></p><p><span class="send_time" dateutc="${date}">${UTCDate}</span><a class="report_comment" receiver="${userId}">${report_commentText}</a><a class="comment_trans" id="trans_id">${comment_transText}</a><a class="recomment_op1_lq">${recommentText}</a>${deleteHtml}</p></dd></dl></dd>',
                    outer: '<dl class="comment_box_lf" datalq1="Id:${id},userId:${userId}"><dt><img src="${userIdImg}" width="32" height="32" alt="${userId}"/></dt><dd><p><a class="name_box1_lq">${userId}&nbsp;：</a><span class="comment_content">${content}</span></p><p><span class="send_time" dateutc="${date}">${UTCDate}</span><a class="report_comment" receiver="${userId}">${report_commentText}</a><a class="comment_trans" id="trans_id">${comment_transText}</a><a class="recomment_op1_lq">${recommentText}</a>${deleteHtml}</p></dd><dd class="hidden1_lq reply_box1_lq"></dd></dl>'
                });
            }
           
           

        }

        //动态在每一条评论的上方加一条线
        $("#CommentTree .comment_box_lf").each(function () {
            var jqdd = $(this).children("dd");
            if (jqdd.length > 2) {
                jqdd.eq(1).before("<dd class='first'><span class='mark'></span></dd>");
            }
        });
    }
})(jQuery);
/*tree.yk.js*/
(function ($) {
    $.scroll_tree = function (setting) {
        var options = {
            selector: null,
            replySelc:null,
            btnTranslate:x18n.transate,
            btnReply:x18n.btnReply,
            btnDelete: x18n.btnDelete,
            btnReport: x18n.btnReport,
            dataUrl: null,
            sqlId: null,
            visitor: null,
            createUrl: null,
            deleteUrl: null,
            msgNull: null,
            bindTrans:$.noop,
            runBindTrans:$.noop,
            bindReport:$.noop,
            checkBuckleGold:function(){return true},
            hasDel:true
        };
        $.extend(options, setting);
        var html = ['<div class="scrollbar"><div class="track"><div class="thumb"><div class="end"></div></div></div></div>',
            '<div class="viewport"><div class="overview"><div class="reply_input1_lq comment_tree1_lq"></div></div></div>'].join('');

        var This=$(options.selector).html(html);
        //组件初始化
        var deleteHtml=options.hasDel?'<a class="delete_op1_lq">×</a>':'';
        var tt = $('.comment_tree1_lq',This).commentTree({
            html: { templateParent: '<dl datalq1="Id:${id},userId:${userId}" class="comment_box_lf"><dt><img src="${userIdImg}" alt="${userId}"/></dt><dd><p><a class="name_box1_lq">${userId}：&nbsp;</a><span class="comment_content">${content}</span></p><p><span class="send_time" dateutc="${date}">${UTCDate}</span><a class="report_comment" receiver="${userId}">${report_commentText}</a><a class="comment_trans" id="trans_${id}">${comment_transText}</a><a class="recomment_op1_lq">${recommentText}</a>${deleteHtml}</p></dd>',
                templateChild: '<dd><dl datalq1="Id:${id},userId:${userId}" class="child_box1_lq"><dt><img src="${userIdImg}" alt="${userId}"/></dt><dd><p><a class="name_box1_lq">${userId}&nbsp;${recommentText}&nbsp;${parentUserId}：</a><span class="comment_content">${content}</span></p><p><span class="send_time" dateutc="${date}">${UTCDate}</span><a class="report_comment" receiver="${userId}">${report_commentText}</a><a class="comment_trans" id="trans_${id}">${comment_transText}</a><a class="recomment_op1_lq">${recommentText}</a>${deleteHtml}</p></dd></dl></dd>',
                templateClose: '<dd class="hidden1_lq reply_box1_lq"></dd></dl>',
                staticData: { translateText: options.btnTranslate, recommentText: options.btnReply, report_commentText: options.btnReport, comment_transText: options.btnTranslate,deleteHtml:deleteHtml }
            }
        }).refresh();
        var tScroll=$('#js_photo_scroll').tinyscrollbar({ limitHeight: 312, content: '#js_photo_scroll div'});
        $('.overview',This).reply({
            tree: {
                createNode: addComment,
                delNode: delComment,
                template: {
                    inner: '<dd><dl datalq1="Id:${id},userId:${userId}" class="child_box1_lq"><dt><img src="${userIdImg}" alt="${userId}"/></dt><dd><p><a class="name_box1_lq">${userId}&nbsp;${recommentText}&nbsp;${parentUserId}：</a><span class="comment_content">${content}</span></p><p><span class="send_time" dateutc="${date}">${UTCDate}</span><a class="report_comment" receiver="${userId}">${report_commentText}</a><a class="comment_trans" id="trans_id">${comment_transText}</a><a class="recomment_op1_lq">${recommentText}</a>${deleteHtml}</p></dd></dl></dd>',
                    data: { translateText: options.btnTranslate, recommentText: options.btnReply, report_commentText: options.btnReport, comment_transText: options.btnTranslate,deleteHtml:deleteHtml }
                }
            },
            input: {
                onFlow: function (count) {
                    failure_message(x18n.textOverFlow + count);
                    return false;
                },
                onEmpty:function(){
                    failure_message(x18n.commentIsNull);
                    return false;
                }
            },
            memberId: options.visitor,
            reverse: true,
            onResize:function(){
                tScroll.tinyscrollbar_update('relative');
            }
        });

        //填充数据
        $.get(options.dataUrl, { id: options.sqlId }, function (res) {
            var jsonData = eval('(' + res + ')');
            var ids = [];
            var authors = [];
            for (var n = 0; n < jsonData.length; n++) {
                jsonData[n].UTCDate = toolLq.utcStrParse(jsonData[n].sendTime);
                ids.push("'" + jsonData[n].id + "'");
                authors.push("'" + jsonData[n].userId + "'");
            }
            ids = ids.join(',');
            authors = authors.join(',');
            tt.refresh(jsonData, true);
            tScroll.tinyscrollbar_update();
            //绑定翻译
            options.bindTrans(ids, authors);
            //绑定举报
            Global_report(options.selector+' .overview .report_comment');
        });
      
        //添加评论
        function addComment(content, pid, jqTxta, reply) {
            if (!content) {
                failure_message(x18n.commentIsNull);
                removeDom();
                return;
            }
            var transType = jqTxta.siblings('.mood_op1_lq').find('select').has('option[value="en"]').val() ;
            function realAddComment(){
                $.post(options.createUrl, { pid: pid, ownerId: options.sqlId, content: content, transType:transType }, function (res) {
                    if (res.result == '1') {
                        res.UTCDate = toolLq.utcStrParse(res.date).str;
                        reply.submitReply(content, jqTxta, res.id, pid, res);
                        success_message(res.tip);
                        jqTxta.data('jqDl').attr('id', res.id);
                        //每个新增评论的翻译按钮，单独绑定一个translate
                        options.runBindTrans(res.id);
                        //举报
                        Global_report(jqTxta.data('jqDl').find('.report_comment'));
                    }
                    else if (res.result == '2') {
                        goldShortage();
                        reply.removeDom([0], jqTxta.data('jqDl'));
                        jqTxta.val('');
                    }
                    else {
                        failure_message(res.tip);
                        reply.removeDom([0], jqTxta.data('jqDl'));
                        jqTxta.val('');
                    }
                });
            }
            function removeDom(){
                reply.removeDom([0], jqTxta.data('jqDl'));
            }
            //执行hook
            if(!options.checkBuckleGold(pid,options.sqlId,content,transType,realAddComment,removeDom))return;
            realAddComment();
        }
        //删除评论
        function delComment(ids, jqDl, reply) {
            if(ids.length<1)failure_message(options.msgNull);
            var id=ids.length==1?ids[0]:"'"+ids.join("','")+"'";
            $.post(options.deleteUrl, { id: id,ownerId:options.sqlId }, function (res) {
                if (res.success) {
                    reply.delReply(ids, jqDl)
                }
                else {
                    failure_message(res.message);
                }
            });
        }
        //评论框
        if($(options.replySelc).data('replyInput'))return;//若已绑定，则不再绑定
        $(options.replySelc).replyInput();
        $(options.replySelc+' .gray_btn1_lq').bind('click', submitReply);
        function submitReply() {
            var reply = $('.overview',This).reply('getReply');
            console.log(reply)
            reply.submitReply(this, null, {
                inner: '<dd><dl datalq1="Id:${id},userId:${userId}" class="child_box1_lq"><dt><img src="${userIdImg}" alt="${userId}"/></dt><dd><p><a class="name_box1_lq">${userId}&nbsp;${recommentText}&nbsp;${parentUserId}：</a><span class="comment_content">${content}</span></p><p><span class="send_time" dateutc="${date}">${UTCDate}</span><a class="report_comment" receiver="${userId}">${report_commentText}</a><a class="comment_trans" id="trans_id">${comment_transText}</a><a class="recomment_op1_lq">${recommentText}</a>${deleteHtml}</p></dd></dl></dd>',
                outer: '<dl class="comment_box_lf" datalq1="Id:${id},userId:${userId}"><dt><img src="${userIdImg}" width="32" height="32" alt="${userId}"/></dt><dd><p><a class="name_box1_lq">${userId}&nbsp;：</a><span class="comment_content">${content}</span></p><p><span class="send_time" dateutc="${date}">${UTCDate}</span><a class="report_comment" receiver="${userId}">${report_commentText}</a><a class="comment_trans" id="trans_id">${comment_transText}</a><a class="recomment_op1_lq">${recommentText}</a>${deleteHtml}</p></dd><dd class="hidden1_lq reply_box1_lq"></dd></dl>'
            });
        }
    }
})(jQuery);
/*translate.js*/
(function ($) {
    $.fn.translate = function (setting, init) {
        var options = {
            selector: null,
            title: x18n.selectLanguage,
            url: null,
            ids: null,
            names: null,
            tableName: null,
            fieldName: null,
            submit:$.noop,
            replace:$.noop
        };
        $.extend(options, setting);
        var html = '<div id="translate_menu" class="pop_menu1_lq pop_menu_translate hidden1_lq"><div class="menu_title_lq">' + options.title + '</div><a language="en"><span class="dot_icon1_lq"></span>English</a><a language="cn"><span class="dot_icon1_lq"></span>中文(简体)</a><a language="tr"><span class="dot_icon1_lq"></span>中文(繁体)</a><a language="ko"><span class="dot_icon1_lq"></span>한국어</a><a language="rs"><span class="dot_icon1_lq"></span>Pусский</a><a language="gm"><span class="dot_icon1_lq"></span>Deutsch</a><a language="sp"><span class="dot_icon1_lq"></span>Español</a><a language="jp"><span class="dot_icon1_lq"></span>日本語</a></div>';
        if (this.length > 0) {
            $('#' + options.selector).append(html);
            this.popMenu({ id: 'translate_menu',
                btn0: function (i, aObj, btn) {
                    var content =  $(btn).data($(aObj).attr('language') + '_content');
                    var state =  $(btn).data($(aObj).attr('language') + '_state');
                    if (content) {
                        content=$.fn.jqfaceShow({str:toolLq.filterLt(content)});
                        options.replace(content, aObj, btn);
                    }
                    else {
                        if (!content && !state&&state!=0) {
                            options.submit(i, aObj, btn);
                        }
                    }
                    $('#translate_menu').addClass('hidden3_lq');
                },
                onopen: transState
            });
        }

        //将翻译结果保存到Jquery.Data里面
        $.post(options.url, { ids: options.ids, names: options.names , tableName: options.tableName, fieldName:options.fieldName}, function (data) {
            if (data) {
                var json = eval('(' + data + ')');
                for (var n = 0; n < json.length; n++) {
                    for (var m = 0; m < json[n].Result.length; m++) {
                        $('#trans_' + json[n].Id).data(json[n].Result[m].Language + '_state', json[n].Result[m].State);
                        $('#trans_' + json[n].Id).data(json[n].Result[m].Language + '_content', json[n].Result[m].Content);
                    }
                }
            }
        });

        //翻译状态初始化
        function transState(btn) {
            $('#translate_menu').removeClass('hidden3_lq');
            $('#' + this.id).find('a').each(function (i) {
                var jqObj = $(this);
                jqObj.removeClass('translated_lq disable1_lq')
                    .find('.progress_icon1_lq').remove();
                var state =  $(btn).data($(this).attr('language') + '_state');
                if (state || state == 0) {
                    if (state == '1') {
                        jqObj.attr('title', x18n.alreadyTranslate).addClass('translated_lq');
                    }
                    else {
                        jqObj.attr('title', x18n.onTranslate).append('<span class="progress_icon1_lq"></span>');
                    }
                }
            });
        }
    }
})(jQuery);
//加载翻译中状态
function loadTransing(aObj, btn) {
    $(btn).data($(aObj).attr('language') + '_state', 0);
}
/*translate_comment.js*/
(function ($) {
    $.fn.translateComment = function (setting, init) {
        if(typeof setting=='string')return runDatafun(setting,this,init);
        var options = {
            selector: null,
            title: x18n.selectLanguage,
            url: null,
            ids: null,
            names: null,
            tableName: null,
            fieldName: null,
            menuId:null,
            submit:$.noop,
            replace:$.noop
        };
        $.extend(options, setting);
        var html = '<div id="'+options.menuId+'" class="pop_menu1_lq pop_menu_translate hidden1_lq"><div class="menu_title_lq">' + options.title + '</div><a language="en"><span class="dot_icon1_lq"></span>English</a><a language="cn"><span class="dot_icon1_lq"></span>中文(简体)</a><a language="tr"><span class="dot_icon1_lq"></span>中文(繁体)</a><a language="ko"><span class="dot_icon1_lq"></span>한국어</a><a language="rs"><span class="dot_icon1_lq"></span>Pусский</a><a language="gm"><span class="dot_icon1_lq"></span>Deutsch</a><a language="sp"><span class="dot_icon1_lq"></span>Español</a><a language="jp"><span class="dot_icon1_lq"></span>日本語</a></div>';
        if (this.length > 0) {
            $('#' + options.selector).append(html);
            this.popMenu({ id: options.menuId,
                btn0: function (i, aObj, btn) {
                    var content = $(btn).data($(aObj).attr('language') + '_content');
                    var state = $(btn).data($(aObj).attr('language') + '_state');
                    if (content) {
                        content=$.fn.jqfaceShow({str:toolLq.filterLt(content)});
                        options.replace(content, aObj, btn);
                    }
                    else {
                        if (!content && !state&&state!=0) {
                            options.submit(i, aObj, btn);
                        }
                    }
                    $('#translate_menu').addClass('hidden3_lq');
                },
                onopen: transState
            });
        }

        //将翻译结果保存到Jquery.Data里面
        $.post(options.url, { ids: options.ids, names: options.names , tableName: options.tableName, fieldName:options.fieldName}, function (data) {
            if (data) {
                var json = eval('(' + data + ')');
                for (var n = 0; n < json.length; n++) {
                    for (var m = 0; m < json[n].Result.length; m++) {
                        $('#trans_' + json[n].Id).data(json[n].Result[m].Language + '_state', json[n].Result[m].State);
                        $('#trans_' + json[n].Id).data(json[n].Result[m].Language + '_content', json[n].Result[m].Content);
                    }
                }
            }
        });

        //翻译状态初始化
        function transState(btn) {
            $('#translate_menu').removeClass('hidden3_lq');
            $('#' + this.id).find('a').each(function (i) {
                var jqObj = $(this);
                jqObj.removeClass('translated_lq disable1_lq')
                    .find('.progress_icon1_lq').remove();
                var state =$(btn).data($(this).attr('language') + '_state');
                if (state || state == 0) {
                    if (state == '1') {
                        jqObj.attr('title', x18n.alreadyTranslate).addClass('translated_lq');
                    }
                    else {
                        jqObj.attr('title', x18n.onTranslate).append('<span class="progress_icon1_lq"></span>');
                    }
                }
            });
        }
        return this;
    };
    function runDatafun(key,jqObj,arg){
        if(typeof jqObj.data(key)=='function'){
            return jqObj.data(key)(arg);
        }
        return null;
    }
})(jQuery);
/*translate_comment.js*/
(function ($) {
    $.fn.translateComment2 = function (setting, init) {
        if(typeof setting=='string')return runDatafun(setting,this,init);
        var options = {
            selector: null,
            title: x18n.selectLanguage,
            url: null,
            ids: null,
            names: null,
            tableName: null,
            fieldName: null,
            menuId:null,
            submit:$.noop,
            replace:$.noop
        };
        $.extend(options, setting);
        var html = '<div id="'+options.menuId+'" class="pop_menu1_lq pop_menu_translate hidden1_lq"><div class="menu_title_lq">' + options.title + '</div><a language="en"><span class="dot_icon1_lq"></span>English</a><a language="cn"><span class="dot_icon1_lq"></span>中文(简体)</a><a language="tr"><span class="dot_icon1_lq"></span>中文(繁体)</a><a language="ko"><span class="dot_icon1_lq"></span>한국어</a><a language="rs"><span class="dot_icon1_lq"></span>Pусский</a><a language="gm"><span class="dot_icon1_lq"></span>Deutsch</a><a language="sp"><span class="dot_icon1_lq"></span>Español</a><a language="jp"><span class="dot_icon1_lq"></span>日本語</a></div>';
        if (this.length > 0) {
            $('#' + options.selector).append(html);
            this.popMenu({ id: options.menuId,
                btn0: function (i, aObj, btn) {
                    var content = $(btn).data($(aObj).attr('language') + '_content');
                    var state = $(btn).data($(aObj).attr('language') + '_state');
                    if (content) {
                        content=$.fn.jqfaceShow({str:toolLq.filterLt(content)});
                        options.replace(content, aObj, btn);
                    }else {
                        if (!content &&!state&&state!=0) {
                            options.submit(i, aObj, btn);
                        }
                    }
                },
                onopen: transState
            });
        }
        //将翻译结果保存到Jquery.Data里面
        $.ajax({url:options.url,
            data:{ ids: options.ids, names: options.names , tableName: options.tableName, fieldName:options.fieldName, type: options.type},
            type:'POST',
            success:function (data) {
                if (data) {
                    var json = eval('(' + data + ')');
                    for (var n = 0; n < json.length; n++) {
                        for (var m = 0; m < json[n].Result.length; m++) {
                            $('#trans_' + json[n].Id).data(json[n].Result[m].Language + '_state', json[n].Result[m].State);
                            $('#trans_' + json[n].Id).data(json[n].Result[m].Language + '_content', json[n].Result[m].Content);
                        }
                    }
                }
            },
            async:false//同步调用
        });

        //翻译状态初始化
        function transState(btn) {
            $('#' + this.id).find('a').each(function (i) {
                var jqObj = $(this);
                jqObj.removeClass('translated_lq disable1_lq')
                    .find('.progress_icon1_lq').remove();
                var state = $(btn).data($(this).attr('language') + '_state');
                if (state || state == 0) {
                    if (state == '1') {
                        jqObj.attr('title', x18n.alreadyTranslate).addClass('translated_lq');
                    }
                    else {
                        jqObj.attr('title', x18n.onTranslate).append('<span class="progress_icon1_lq"></span>');
                    }
                }
            });
        }
        return this;
    };
    function runDatafun(key,jqObj,arg){
        if(typeof jqObj.data(key)=='function'){
            return jqObj.data(key)(arg);
        }
        return null;
    }
})(jQuery);